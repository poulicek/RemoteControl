<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>